<h1>Result</h1>

<!--
<p><%= @attempt %></p>
<p><%= @start %></p>
<p><%= @grid %></p>
-->


<% 
require 'time'
@start = Time.parse(@start)
 %>

<% 
@grid = @grid.split
 %>

<% 
require 'open-uri'
require 'json'

end_time = Time.now

def attempt_included_grid(attempt, grid)
  # Return true if attempt is within grid else false
  # Argument attempt = string
  # Argument grid = array
  attempt.upcase.each_char do |c|
    position = grid.index(c)
    return false if position.nil?

    grid.delete_at(position)
  end
  return true
end

def stringify_array(array)
  return_string = ""
  array.each do |letter|
    return_string = return_string + letter + " "
  end
  return_string[0...-1]
end
def run_game(attempt, grid, start_time, end_time)
  # TODO: runs the game and return detailed hash of result (with `:score`, `:message` and `:time` keys)
  # Open URL, read result, parse
  api_result_serialized = URI.open("https://wagon-dictionary.herokuapp.com/#{attempt}").read
  result_serialized = JSON.parse(api_result_serialized)
  # Hash format word exist {"found":true,"word":"apple","length":5}
  # Hash format word doesn't exist {"found":false,"word":"adklj","error":"word not found"}
  # Do something if word exists and is included in grid
  # duration = end_time - start_time
  duration = end_time - start_time
  # Word exists and in the grid
  if result_serialized["found"] && attempt_included_grid(attempt, grid)
    { score: ((attempt.length.to_f / 2) + (100 / duration)), message: "<strong>Congratulations!</strong> #{attempt.upcase} is a valid English word!", time: duration }
  # Word exists but is not in the grid
  elsif result_serialized["found"] && !attempt_included_grid(attempt, grid)
    { score: 0, message: "Sorry but <strong>#{attempt.upcase}</strong> can't be built out of #{stringify_array(grid)}", time: duration }
  # Do something else if word doesn't exist or not included in grid
  else
    { score: 0, message: "Sorry but <strong>#{attempt.upcase}</strong> does not seem to be a valid English word...", time: duration }
  end
end

result = run_game(@attempt, @grid, @start, end_time);

 %>

 <p><%= raw result[:message] %></p>
 <p>Your score = <%= result[:score].round(1) %></p>

 <%= link_to "Play again!", new_path %>